image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/cifront:0.5.0

stages:
  - node_build
  - docker_build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

node_build:
  stage: node_build
  script:
    - node_module admin
    - node_build build
    - cp -r dist /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/dist
    - cp -r ../structure /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/structure
  only:
    - /^release-.*$/
    - /^hotfix-.*$/
    - develop
    - tags

node_build_dev:
  stage: node_build
  script:
    - node_module admin
    - node_build build
    - rm -rf /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
  only:
    - /^feature-.*$/

docker_build:
  image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/cibase:0.5.0
  stage: docker_build
  script:
    - docker_build
    - rm -rf /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    - chart_build
  only:
    - develop
    - /^release-.*$/
    - /^hotfix-.*$/
    - tags

.auto_devops: &auto_devops |
    curl -o .auto_devops.sh \
        "${CHOERODON_URL}/devops/ci?token=${Token}&type=front"
    if [ $? -ne 0 ];then
      cat .auto_devops.sh
      exit 1
    fi

    export GROUP_NAME=operation-zsmq
    export PROJECT_NAME=zsmq-front
    export CI_COMMIT_TAG=$(GetVersion)


    function node_module(){
        cd ${1} && yarn
        mkdir -p /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    }

    function node_build(){
        npm run ${1:-"build"}
        find dist -name '*.js' | xargs sed -i "s/localhost:version/$CI_COMMIT_TAG/g"
    }

    function docker_build(){
        cp -r /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/* ${1:-"."}
        docker login -u ${DOCKER_USER} -p ${DOCKER_PWD} ${DOCKER_REGISTRY}
        docker build --pull -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} ${1:-"."}
        docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
    }
    
    
    function chart_build(){
        CHART_PATH=`find . -maxdepth 3 -name Chart.yaml`
        sed -i 's/repository:.*$/repository\:\ '${DOCKER_REGISTRY}'\/'${GROUP_NAME}'\/'${PROJECT_NAME}'/g' ${CHART_PATH%/*}/values.yaml
        helm package ${CHART_PATH%/*} --version ${CI_COMMIT_TAG} --app-version ${CI_COMMIT_TAG}
        TEMP=${CHART_PATH%/*}
        FILE_NAME=${TEMP##*/}
        curl -X POST \
            -F "token=${Token}" \
            -F "version=${CI_COMMIT_TAG}" \
            -F "file=@${FILE_NAME}-${CI_COMMIT_TAG}.tgz" \
            -F "commit=${CI_COMMIT_SHA}" \
            -F "image=${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}" \
            "${CHOERODON_URL}/devops/ci"
        ls
        if [ $? -ne 0 ]; then
            echo "upload chart error"
            exit 1
        fi
    }

    

before_script:
  - *auto_devops

